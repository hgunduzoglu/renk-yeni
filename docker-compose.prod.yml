version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-renk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-renkpass}
      POSTGRES_DB: ${POSTGRES_DB:-renk}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - renk-net
    ports:
      - "5432:5432"

  backend:
    build: 
      context: ./apps/backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-renk}:${POSTGRES_PASSWORD:-renkpass}@db:5432/${POSTGRES_DB:-renk}
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      PORT: 4000
      NODE_ENV: production
    networks:
      - renk-net
    ports:
      - "4000:4000"
    volumes:
      - ./apps/backend/uploads:/app/uploads

  frontend:
    build: 
      context: ./apps/frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000/api}
      NEXT_PUBLIC_CDN_URL: ${NEXT_PUBLIC_CDN_URL:-/}
      NODE_ENV: production
    networks:
      - renk-net
    ports:
      - "3000:3000"

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    networks:
      - renk-net

volumes:
  pgdata:

networks:
  renk-net:
    driver: bridge 